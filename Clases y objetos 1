class Autor:
    def __init__(self, nombre, nacionalidad):
        self.nombre = nombre
        self.nacionalidad = nacionalidad
        self.libros = []  # Lista para almacenar los libros escritos por el autor

    def agregar_libro(self, libro):
        """Agrega un libro a la lista de libros del autor."""
        if libro not in self.libros:
            self.libros.append(libro)
            print(f"El libro '{libro}' ha sido agregado a la lista de {self.nombre}.")
        else:
            print(f"El libro '{libro}' ya está en la lista de {self.nombre}.")

    def eliminar_libro(self, libro):
        """Elimina un libro de la lista de libros del autor."""
        if libro in self.libros:
            self.libros.remove(libro)
            print(f"El libro '{libro}' ha sido eliminado de la lista de {self.nombre}.")
        else:
            print(f"El libro '{libro}' no se encuentra en la lista de {self.nombre}.")

    def mostrar_libros(self):
        """Muestra todos los libros escritos por el autor."""
        if self.libros:
            print(f"Libros escritos por {self.nombre}:")
            for libro in self.libros:
                print(f"- {libro}")
        else:
            print(f"{self.nombre} no tiene libros registrados.")

# Ejemplo de uso

if __name__ == "__main__":
    # Crear un autor
    autor = Autor("Gabriel García Márquez", "Colombiano")

    # Agregar libros
    autor.agregar_libro("Cien años de soledad")
    autor.agregar_libro("El amor en los tiempos del cólera")
    autor.agregar_libro("Crónica de una muerte anunciada")

    # Mostrar libros
    autor.mostrar_libros()

    # Intentar agregar un libro repetido
    autor.agregar_libro("Cien años de soledad")

    # Eliminar un libro
    autor.eliminar_libro("El amor en los tiempos del cólera")

    # Mostrar libros después de eliminar uno
    autor.mostrar_libros()

    # Intentar eliminar un libro que no existe
    autor.eliminar_libro("El otoño del patriarca")
