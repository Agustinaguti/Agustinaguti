class Nodo:
    def __init__(self, valor):
        self.valor = valor
        self.izquierda = None
        self.derecha = None

class ArbolBinario:
    def __init__(self):
        self.raiz = None

    def insertar(self, valor):
        if self.raiz is None:
            self.raiz = Nodo(valor)
        else:
            self._insertar_recursivo(self.raiz, valor)

    def _insertar_recursivo(self, nodo, valor):
        if valor < nodo.valor:
            if nodo.izquierda is None:
                nodo.izquierda = Nodo(valor)
            else:
                self._insertar_recursivo(nodo.izquierda, valor)
        else:
            if nodo.derecha is None:
                nodo.derecha = Nodo(valor)
            else:
                self._insertar_recursivo(nodo.derecha, valor)

    def maximo_postorden(self):
        if self.raiz is None:
            return None
        return self._maximo_postorden_recursivo(self.raiz)

    def _maximo_postorden_recursivo(self, nodo):
        if nodo is None:
            return float('-inf')

        # Recorrer subárbol izquierdo y derecho en postorden
        max_izquierda = self._maximo_postorden_recursivo(nodo.izquierda)
        max_derecha = self._maximo_postorden_recursivo(nodo.derecha)

        # Devolver el valor máximo entre el nodo actual y los máximos de los subárboles
        return max(nodo.valor, max_izquierda, max_derecha)

# Ejemplo de uso
arbol = ArbolBinario()
arbol.insertar(20)
arbol.insertar(10)
arbol.insertar(30)
arbol.insertar(5)
arbol.insertar(15)
arbol.insertar(25)
arbol.insertar(35)

maximo = arbol.maximo_postorden()
print("El valor máximo en el árbol es:", maximo)
